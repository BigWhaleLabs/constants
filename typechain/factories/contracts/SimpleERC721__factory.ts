/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SimpleERC721,
  SimpleERC721Interface,
} from "../../contracts/SimpleERC721";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "tokenName",
        type: "string",
      },
      {
        internalType: "string",
        name: "tokenSymbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200191a3803806200191a833981016040819052620000349162000237565b8151829082906200004d906000906020850190620000de565b50805162000063906001906020840190620000de565b505050620000806200007a6200008860201b60201c565b6200008c565b5050620002f1565b3390565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054620000ec906200029e565b90600052602060002090601f0160209004810192826200011057600085556200015b565b82601f106200012b57805160ff19168380011785556200015b565b828001600101855582156200015b579182015b828111156200015b5782518255916020019190600101906200013e565b50620001699291506200016d565b5090565b5b808211156200016957600081556001016200016e565b600082601f83011262000195578081fd5b81516001600160401b0380821115620001b257620001b2620002db565b604051601f8301601f19908116603f01168101908282118183101715620001dd57620001dd620002db565b81604052838152602092508683858801011115620001f9578485fd5b8491505b838210156200021c5785820183015181830184015290820190620001fd565b838211156200022d57848385830101525b9695505050505050565b600080604083850312156200024a578182fd5b82516001600160401b038082111562000261578384fd5b6200026f8683870162000184565b9350602085015191508082111562000285578283fd5b50620002948582860162000184565b9150509250929050565b600181811c90821680620002b357607f821691505b60208210811415620002d557634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b61161980620003016000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c806370a08231116100a2578063a22cb46511610071578063a22cb46514610225578063b88d4fde14610238578063c87b56dd1461024b578063e985e9c51461025e578063f2fde38b1461029a57600080fd5b806370a08231146101f1578063715018a6146102045780638da5cb5b1461020c57806395d89b411461021d57600080fd5b80631249c58b116100e95780631249c58b1461019857806317d70f7c146101a057806323b872dd146101b857806342842e0e146101cb5780636352211e146101de57600080fd5b806301ffc9a71461011b57806306fdde0314610143578063081812fc14610158578063095ea7b314610183575b600080fd5b61012e610129366004611314565b6102ad565b60405190151581526020015b60405180910390f35b61014b6102be565b60405161013a91906113fc565b61016b61016636600461134c565b610350565b6040516001600160a01b03909116815260200161013a565b6101966101913660046112eb565b6103ea565b005b610196610500565b6007546101aa9081565b60405190815260200161013a565b6101966101c63660046111a1565b610528565b6101966101d93660046111a1565b610559565b61016b6101ec36600461134c565b610574565b6101aa6101ff366004611155565b6105eb565b610196610672565b6006546001600160a01b031661016b565b61014b6106d8565b6101966102333660046112b1565b6106e7565b6101966102463660046111dc565b6106f6565b61014b61025936600461134c565b61072e565b61012e61026c36600461116f565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6101966102a8366004611155565b610816565b60006102b8826108de565b92915050565b6060600080546102cd90611521565b80601f01602080910402602001604051908101604052809291908181526020018280546102f990611521565b80156103465780601f1061031b57610100808354040283529160200191610346565b820191906000526020600020905b81548152906001019060200180831161032957829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b03166103ce5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b60006103f582610574565b9050806001600160a01b0316836001600160a01b031614156104635760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084016103c5565b336001600160a01b038216148061047f575061047f813361026c565b6104f15760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c000000000000000060648201526084016103c5565b6104fb838361092e565b505050565b600061050b60075490565b9050610517338261099c565b610525600780546001019055565b50565b61053233826109b6565b61054e5760405162461bcd60e51b81526004016103c590611461565b6104fb838383610aad565b6104fb838383604051806020016040528060008152506106f6565b6000818152600260205260408120546001600160a01b0316806102b85760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b60648201526084016103c5565b60006001600160a01b0382166106565760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b60648201526084016103c5565b506001600160a01b031660009081526003602052604090205490565b6006546001600160a01b031633146106cc5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103c5565b6106d66000610c49565b565b6060600180546102cd90611521565b6106f2338383610c9b565b5050565b61070033836109b6565b61071c5760405162461bcd60e51b81526004016103c590611461565b61072884848484610d6a565b50505050565b6000818152600260205260409020546060906001600160a01b03166107ad5760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b60648201526084016103c5565b60006107c460408051602081019091526000815290565b905060008151116107e4576040518060200160405280600081525061080f565b806107ee84610d9d565b6040516020016107ff929190611390565b6040516020818303038152906040525b9392505050565b6006546001600160a01b031633146108705760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103c5565b6001600160a01b0381166108d55760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103c5565b61052581610c49565b60006001600160e01b031982166380ac58cd60e01b148061090f57506001600160e01b03198216635b5e139f60e01b145b806102b857506301ffc9a760e01b6001600160e01b03198316146102b8565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061096382610574565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6106f2828260405180602001604052806000815250610eb7565b6000818152600260205260408120546001600160a01b0316610a2f5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016103c5565b6000610a3a83610574565b9050806001600160a01b0316846001600160a01b03161480610a8157506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b80610aa55750836001600160a01b0316610a9a84610350565b6001600160a01b0316145b949350505050565b826001600160a01b0316610ac082610574565b6001600160a01b031614610b245760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b60648201526084016103c5565b6001600160a01b038216610b865760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016103c5565b610b9160008261092e565b6001600160a01b0383166000908152600360205260408120805460019290610bba9084906114de565b90915550506001600160a01b0382166000908152600360205260408120805460019290610be89084906114b2565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b03161415610cfd5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016103c5565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610d75848484610aad565b610d8184848484610eea565b6107285760405162461bcd60e51b81526004016103c59061140f565b606081610dc15750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610deb5780610dd58161155c565b9150610de49050600a836114ca565b9150610dc5565b60008167ffffffffffffffff811115610e1457634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015610e3e576020820181803683370190505b5090505b8415610aa557610e536001836114de565b9150610e60600a86611577565b610e6b9060306114b2565b60f81b818381518110610e8e57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350610eb0600a866114ca565b9450610e42565b610ec18383610ff7565b610ece6000848484610eea565b6104fb5760405162461bcd60e51b81526004016103c59061140f565b60006001600160a01b0384163b15610fec57604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610f2e9033908990889088906004016113bf565b602060405180830381600087803b158015610f4857600080fd5b505af1925050508015610f78575060408051601f3d908101601f19168201909252610f7591810190611330565b60015b610fd2573d808015610fa6576040519150601f19603f3d011682016040523d82523d6000602084013e610fab565b606091505b508051610fca5760405162461bcd60e51b81526004016103c59061140f565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610aa5565b506001949350505050565b6001600160a01b03821661104d5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016103c5565b6000818152600260205260409020546001600160a01b0316156110b25760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016103c5565b6001600160a01b03821660009081526003602052604081208054600192906110db9084906114b2565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b80356001600160a01b038116811461115057600080fd5b919050565b600060208284031215611166578081fd5b61080f82611139565b60008060408385031215611181578081fd5b61118a83611139565b915061119860208401611139565b90509250929050565b6000806000606084860312156111b5578081fd5b6111be84611139565b92506111cc60208501611139565b9150604084013590509250925092565b600080600080608085870312156111f1578081fd5b6111fa85611139565b935061120860208601611139565b925060408501359150606085013567ffffffffffffffff8082111561122b578283fd5b818701915087601f83011261123e578283fd5b813581811115611250576112506115b7565b604051601f8201601f19908116603f01168101908382118183101715611278576112786115b7565b816040528281528a6020848701011115611290578586fd5b82602086016020830137918201602001949094529598949750929550505050565b600080604083850312156112c3578182fd5b6112cc83611139565b9150602083013580151581146112e0578182fd5b809150509250929050565b600080604083850312156112fd578182fd5b61130683611139565b946020939093013593505050565b600060208284031215611325578081fd5b813561080f816115cd565b600060208284031215611341578081fd5b815161080f816115cd565b60006020828403121561135d578081fd5b5035919050565b6000815180845261137c8160208601602086016114f5565b601f01601f19169290920160200192915050565b600083516113a28184602088016114f5565b8351908301906113b68183602088016114f5565b01949350505050565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906113f290830184611364565b9695505050505050565b60208152600061080f6020830184611364565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b600082198211156114c5576114c561158b565b500190565b6000826114d9576114d96115a1565b500490565b6000828210156114f0576114f061158b565b500390565b60005b838110156115105781810151838201526020016114f8565b838111156107285750506000910152565b600181811c9082168061153557607f821691505b6020821081141561155657634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156115705761157061158b565b5060010190565b600082611586576115866115a1565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160e01b03198116811461052557600080fdfea2646970667358221220fb374c5af5c02f8220be2e0fda7464e0813f38db3916cf9d1d0623cd99cd1d7364736f6c63430008040033";

type SimpleERC721ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SimpleERC721ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SimpleERC721__factory extends ContractFactory {
  constructor(...args: SimpleERC721ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    tokenName: string,
    tokenSymbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SimpleERC721> {
    return super.deploy(
      tokenName,
      tokenSymbol,
      overrides || {}
    ) as Promise<SimpleERC721>;
  }
  override getDeployTransaction(
    tokenName: string,
    tokenSymbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(tokenName, tokenSymbol, overrides || {});
  }
  override attach(address: string): SimpleERC721 {
    return super.attach(address) as SimpleERC721;
  }
  override connect(signer: Signer): SimpleERC721__factory {
    return super.connect(signer) as SimpleERC721__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SimpleERC721Interface {
    return new utils.Interface(_abi) as SimpleERC721Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SimpleERC721 {
    return new Contract(address, _abi, signerOrProvider) as SimpleERC721;
  }
}
